import os
import datetime
import smtplib
import logging
import json
from email.mime.text import MIMEText
from flask import Flask, render_template, request, jsonify
from dotenv import load_dotenv
import openai

# Konfiguracja logowania (DEBUG â€“ dla diagnostyki)
logging.basicConfig(level=logging.DEBUG, format="%(asctime)s - %(levelname)s - %(message)s")

# ZaÅ‚aduj zmienne Å›rodowiskowe z pliku .env
load_dotenv()

app = Flask(__name__, static_folder='static', template_folder='templates')

# Ustawienia â€“ pobierane z pliku .env
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
APP_PASSWORD = os.getenv("APP_PASSWORD")
MAIL_USERNAME = os.getenv("MAIL_USERNAME")
MAIL_PASSWORD = os.getenv("MAIL_PASSWORD")
NOTIFY_EMAIL = os.getenv("NOTIFY_EMAIL", MAIL_USERNAME)

# Sprawdzenie, czy klucz API OpenAI jest ustawiony
if not OPENAI_API_KEY:
    logging.error("Brak klucza API OpenAI! Upewnij siÄ™, Å¼e zmienna OPENAI_API_KEY jest ustawiona w pliku .env.")
    raise ValueError("Brak klucza API OpenAI!")

# Ustaw klucz API dla OpenAI
openai.api_key = OPENAI_API_KEY

# Funkcja Å‚adujÄ…ca FAQ z zewnÄ™trznego pliku faq.json
def load_faq():
    try:
        with open("faq.json", "r", encoding="utf-8") as f:
            faq_data = json.load(f)
        logging.info("FAQ zaÅ‚adowane pomyÅ›lnie.")
        return faq_data
    except Exception as e:
        logging.error("BÅ‚Ä…d podczas Å‚adowania FAQ: %s", e)
        return {}

# ZaÅ‚aduj FAQ do zmiennej FAQ
FAQ = load_faq()

# Funkcja wyszukujÄ…ca FAQ â€“ iteruje po sÅ‚owniku FAQ i zwraca odpowiedÅº, jeÅ›li znajdzie dopasowanie
def get_faq_response(user_input):
    for key, answer in FAQ.items():
        # UÅ¼ywamy lower() dla obu zmiennych, aby wyszukiwanie byÅ‚o bardziej elastyczne
        if key.lower() in user_input.lower():
            return answer
    return None

# Definicje statycznych informacji (fallback)
services_info = (
    "Asystenci AI czyli Chatboty\n\n"
    "ðŸš€ Pakiet Podstawowy â€“ 990 zÅ‚ / rok (jednorazowa pÅ‚atnoÅ›Ä‡)\n"
    "âœ… Chatbot odpowiadajÄ…cy na 10-15 pytaÅ„ FAQ.\n"
    "âœ… Powiadomienia e-mail o pytaniach klientÃ³w.\n"
    "âœ… Hosting na stabilnym serwerze (Render bez usypiania) w cenie.\n"
    "âœ… Podstawowe wsparcie techniczne.\n\n"
    "ðŸ“Œ Pakiet Podstawowy â€“ 500 zÅ‚ jednorazowo + 50 zÅ‚/miesiÄ…c\n"
    "âœ… Chatbot odpowiadajÄ…cy na 10-15 pytaÅ„ FAQ.\n"
    "âœ… Powiadomienia e-mail o pytaniach klientÃ³w.\n"
    "âœ… Hosting na stabilnym serwerze (Render bez usypiania).\n"
    "âœ… Podstawowe wsparcie techniczne.\n\n"
    "ðŸ’¼ Pakiet Rozszerzony â€“ 1490 zÅ‚ / rok (jednorazowa pÅ‚atnoÅ›Ä‡)\n"
    "âœ… Wszystko z Pakietu Podstawowego + wiÄ™cej funkcji:\n"
    "âœ… Chatbot odpowiada na 20-30 pytaÅ„ FAQ.\n"
    "âœ… MoÅ¼liwoÅ›Ä‡ edycji odpowiedzi na Å¼yczenie (2 zmiany rocznie).\n"
    "âœ… Statystyki i analiza zapytaÅ„ klientÃ³w.\n"
    "âœ… Priorytetowa pomoc techniczna.\n\n"
    "ðŸ“Œ Pakiet Rozszerzony â€“ 800 zÅ‚ jednorazowo + 100 zÅ‚/miesiÄ…c\n"
    "âœ… Wszystko z Pakietu Podstawowego + wiÄ™cej funkcji:\n"
    "âœ… Chatbot odpowiada na 20-30 pytaÅ„ FAQ.\n"
    "âœ… MoÅ¼liwoÅ›Ä‡ edycji odpowiedzi na Å¼yczenie (2 zmiany rocznie).\n"
    "âœ… Statystyki i analiza zapytaÅ„ klientÃ³w.\n"
    "âœ… Priorytetowa pomoc techniczna.\n\n"
    "Wybierz opcjÄ™ wygodnÄ… dla siebie â€“ miesiÄ™czna subskrypcja lub jednorazowa opÅ‚ata za rok!\n\n"
    "--------------------------------------\n\n"
    "Strony Internetowe\n\n"
    "ðŸ“Œ Pakiet Podstawowy â€“ 990 zÅ‚ / rok\n"
    "âœ… Rejestracja domeny i konfiguracja hostingu.\n"
    "âœ… Instalacja WordPressa i podstawowych wtyczek.\n"
    "âœ… Szablon dostosowany do branÅ¼y klienta.\n"
    "âœ… 3-5 podstron (np. Strona gÅ‚Ã³wna, O nas, Oferta, Kontakt, Galeria).\n"
    "âœ… Podstawowa optymalizacja SEO.\n"
    "âœ… ResponsywnoÅ›Ä‡ (strona dobrze wyglÄ…da na telefonach).\n"
    "âœ… Hosting + domena w cenie.\n\n"
    "ðŸ“Œ Pakiet Rozszerzony â€“ 1490 zÅ‚ / rok\n"
    "âœ… Rozbudowany szablon i personalizacja.\n"
    "âœ… Do 10 podstron, blog lub sekcja aktualnoÅ›ci.\n"
    "âœ… Formularz kontaktowy + integracja z Google Maps.\n"
    "âœ… Dodatkowa optymalizacja SEO (meta tagi, sitemap).\n"
    "âœ… MoÅ¼liwoÅ›Ä‡ wprowadzenia 2 zmian rocznie na stronie.\n"
    "âœ… Hosting + domena w cenie.\n\n"
    "--------------------------------------\n\n"
    "ðŸŽ¨ Logo i Banery\n"
    "âœ… Projektowanie logo â€“ od 300 zÅ‚.\n"
    "âœ… Banery na strony internetowe â€“ od 150 zÅ‚.\n\n"
    "ðŸŽ“ Szkolenia IT\n"
    "âœ… Szkolenia dla seniorÃ³w (obsÅ‚uga komputera, internet, bezpieczeÅ„stwo online, poczta e-mail, podstawy social media).\n"
    "âœ… Szkolenia dla mÅ‚odych (programowanie, AI, obsÅ‚uga narzÄ™dzi cyfrowych).\n"
    "âœ… Cena: od 100 zÅ‚ za godzinÄ™.\n"
)

pricing_info = (
    "Oferty ChatbotÃ³w AI:\n\n"
    "Pakiet Podstawowy â€“ 990 zÅ‚ / rok lub 500 zÅ‚ jednorazowo + 50 zÅ‚/miesiÄ…c.\n\n"
    "Pakiet Rozszerzony â€“ 1490 zÅ‚ / rok lub 800 zÅ‚ jednorazowo + 100 zÅ‚/miesiÄ…c.\n\n"
)

website_services_pricing = (
    "Cennik Stron Internetowych:\n\n"
    "Pakiet Podstawowy â€“ 990 zÅ‚ / rok\n"
    "âœ… Rejestracja domeny i konfiguracja hostingu.\n"
    "âœ… Instalacja WordPressa i podstawowych wtyczek.\n"
    "âœ… Szablon dostosowany do branÅ¼y klienta (3-5 podstron).\n"
    "âœ… Podstawowa optymalizacja SEO.\n"
    "âœ… ResponsywnoÅ›Ä‡.\n"
    "âœ… Hosting + domena w cenie.\n\n"
    "Pakiet Rozszerzony â€“ 1490 zÅ‚ / rok\n"
    "âœ… Rozbudowany szablon i personalizacja.\n"
    "âœ… Do 10 podstron, blog lub sekcja aktualnoÅ›ci.\n"
    "âœ… Formularz kontaktowy + integracja z Google Maps.\n"
    "âœ… Dodatkowa optymalizacja SEO (meta tagi, sitemap).\n"
    "âœ… MoÅ¼liwoÅ›Ä‡ wprowadzenia 2 zmian rocznie.\n"
    "âœ… Hosting + domena w cenie.\n"
)

def is_business_hours():
    """Sprawdza, czy aktualny czas mieÅ›ci siÄ™ w godzinach pracy (8:00-16:00)."""
    now = datetime.datetime.now().time()
    start = datetime.time(8, 0)
    end = datetime.time(16, 0)
    return start <= now <= end

def get_bot_response(user_input):
    """Generuje odpowiedÅº chatbota na podstawie wpisanego tekstu."""
    lower_input = user_input.lower().strip()

    # ObsÅ‚uga prostych odpowiedzi
    if lower_input == "super":
        return "CieszÄ™ siÄ™, Å¼e mogÅ‚em pomÃ³c!"

    # Odpowiedzi na pytania o kontakt
    if "podaj" in lower_input and "email" in lower_input:
        return "Nasz email to: kontakt@biznesbot.pl"
    if "podaj" in lower_input and ("telefon" in lower_input or "numer" in lower_input):
        return "Nasz numer to: 725 777 393"
    if "jaki macie email" in lower_input:
        return "Nasz email to: kontakt@biznesbot.pl"
    if "jaki jest wasz numer" in lower_input:
        return "Nasz numer to: 725 777 393"
    
    # Powitania
    greetings = ["witaj", "hej", "czeÅ›Ä‡", "czesc", "dzieÅ„ dobry", "mam pytanie"]
    if any(word in lower_input for word in greetings):
        return ("Witam! Jak mogÄ™ Ci pomÃ³c?\n\n"
                "Zapytaj o nasze chatboty, strony internetowe, szkolenia IT, logo lub banery.")
    
    # JeÅ›li w zapytaniu pojawia siÄ™ "oferta", zwrÃ³Ä‡ ofertÄ™
    if "oferta" in lower_input:
        return services_info

    # Informacje o usÅ‚ugach na podstawie sÅ‚Ã³w kluczowych
    if "chatbot" in lower_input or "asystent" in lower_input or "ai" in lower_input:
        return services_info
    if "strona" in lower_input or "wordp" in lower_input:
        return website_services_pricing
    if "szkolenie" in lower_input:
        return "Oferujemy szkolenia IT od 100 zÅ‚ za godzinÄ™. WiÄ™cej informacji na BiznesBot.pl."
    if "logo" in lower_input or "baner" in lower_input:
        return "Projektujemy logo od 300 zÅ‚ i banery od 150 zÅ‚. Skontaktuj siÄ™ z nami!"
    if "cennik" in lower_input:
        return pricing_info

    # ObsÅ‚uga zapytaÅ„ kontaktowych
    if any(kw in lower_input for kw in ["kontakt", "dziaÅ‚acie", "skontaktowaÄ‡"]):
        if is_business_hours():
            return "DziaÅ‚amy od 8:00 do 16:00. ProszÄ™ dzwoniÄ‡: 725 777 393."
        else:
            subject = "Zapytanie poza godzinami pracy"
            timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            email_message = f"Zapytanie: {user_input}\nCzas: {timestamp}"
            send_email_notification(subject, email_message, "kacperskiszymon@gmail.com")
            return ("JesteÅ›my poza godzinami pracy.\n\n"
                    "ProszÄ™ podaÄ‡ swÃ³j adres email lub numer telefonu, abyÅ›my mogli siÄ™ z TobÄ… skontaktowaÄ‡.")
    
    # PrÃ³ba dopasowania FAQ z zewnÄ™trznego pliku
    faq_answer = get_faq_response(user_input)
    if faq_answer:
        return faq_answer

    # JeÅ›li Å¼aden warunek nie pasuje, sprÃ³buj wygenerowaÄ‡ dynamicznÄ… odpowiedÅº z OpenAI
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": (
                    "JesteÅ› chatbotem BiznesBot. Twoim zadaniem jest profesjonalne i przekonujÄ…ce prezentowanie oferty firmy, "
                    "ktÃ³ra oferuje chatboty, strony internetowe, szkolenia IT oraz projektowanie logo i banerÃ³w. "
                    "Twoje odpowiedzi majÄ… nakierowywaÄ‡ klienta do skorzystania z usÅ‚ug i budowaÄ‡ pozytywny wizerunek firmy."
                )},
                {"role": "user", "content": user_input}
            ]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        logging.error("BÅ‚Ä…d przy generowaniu odpowiedzi z OpenAI: %s", e)
        # Fallback, gdy dynamiczne generowanie nie zadziaÅ‚a
        if "exceeded your current quota" in str(e).lower():
            return "Przepraszam, chwilowo wystÄ…piÅ‚ problem z generowaniem odpowiedzi. ProszÄ™ sprÃ³bowaÄ‡ ponownie pÃ³Åºniej."
        else:
            return "Przepraszam, wystÄ…piÅ‚ bÅ‚Ä…d. SprÃ³buj ponownie pÃ³Åºniej."

def send_email_notification(subject, message, recipient):
    """
    WysyÅ‚a e-mail za pomocÄ… serwera SMTP Gmail.
    Upewnij siÄ™, Å¼e zmienne MAIL_USERNAME oraz MAIL_PASSWORD sÄ… ustawione.
    """
    smtp_server = "smtp.gmail.com"
    smtp_port = 587
    sender_email = MAIL_USERNAME
    sender_password = MAIL_PASSWORD

    # Sprawdzenie, czy dane logowania do e-maila sÄ… ustawione
    if not sender_email or not sender_password:
        logging.warning("Brak danych logowania do e-maila. Powiadomienie nie zostaÅ‚o wysÅ‚ane.")
        return False

    msg = MIMEText(message)
    msg["Subject"] = subject
    msg["From"] = sender_email
    msg["To"] = recipient

    try:
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()
        server.login(sender_email, sender_password)
        server.sendmail(sender_email, [recipient], msg.as_string())
        server.quit()
        logging.info("WiadomoÅ›Ä‡ e-mail wysÅ‚ana pomyÅ›lnie.")
        return True
    except Exception as e:
        logging.error("BÅ‚Ä…d przy wysyÅ‚aniu e-maila: %s", e)
        return False

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/ask", methods=["POST"])
def ask():
    user_input = request.form.get("message")
    bot_response = get_bot_response(user_input)
    # WysyÅ‚aj powiadomienie e-mail dla KAÅ»DEGO zapytania
    subject = "Nowe zapytanie z chatbox"
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    email_message = f"Zapytanie: {user_input}\nCzas: {timestamp}"
    send_email_notification(subject, email_message, "kacperskiszymon@gmail.com")
    return jsonify({"response": bot_response})

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=5000)
